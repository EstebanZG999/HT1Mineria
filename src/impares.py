import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# -----------------------------------------------------------
# Cargar el dataset limpio
# -----------------------------------------------------------
data_path = "data/movies_clean.csv"
df = pd.read_csv(data_path)

# Convertir 'releaseDate' a tipo fecha
df["releaseDate"] = pd.to_datetime(df["releaseDate"], errors="coerce")

# -----------------------------------------------------------
# Conversi√≥n de tipos para evitar errores en c√°lculos
# -----------------------------------------------------------
numeric_cols = ["budget", "revenue", "voteCount", "popularity",
                "castWomenAmount", "castMenAmount", "actorsAmount"]
for col in numeric_cols:
    df[col] = pd.to_numeric(df[col], errors="coerce")

# Crear columna adicional para el a√±o y el mes de lanzamiento
df["year"] = df["releaseDate"].dt.year
df["month"] = df["releaseDate"].dt.month  # 1 = Enero, 12 = Diciembre

# Crear la columna 'profit' (ganancia = ingresos - presupuesto)
df["profit"] = df["revenue"] - df["budget"]

# -----------------------------------------------------------
# (a) Las 10 pel√≠culas con mayor presupuesto
# -----------------------------------------------------------
top_budget_movies = df.nlargest(10, "budget")[["title", "budget"]].dropna()

print("\n(a) üé¨ Top 10 pel√≠culas con mayor presupuesto:")
print(top_budget_movies)

# Gr√°fico de barras horizontales
plt.figure(figsize=(8, 6))
plt.barh(top_budget_movies["title"], top_budget_movies["budget"], color="skyblue")
plt.xlabel("Presupuesto (USD)")
plt.title("Top 10 pel√≠culas con mayor presupuesto")
plt.gca().invert_yaxis()  # Invertir para que la m√°s costosa aparezca arriba
plt.tight_layout()
plt.show()

# -----------------------------------------------------------
# (c) La pel√≠cula con m√°s votos
# -----------------------------------------------------------
# Obtenemos el √≠ndice de la fila con la m√°xima 'voteCount'
most_voted_movie = df.loc[df["voteCount"].idxmax(), ["title", "voteCount"]]

print("\n(c) üèÜ Pel√≠cula con m√°s votos:")
print(most_voted_movie)

# (Opcional) Podr√≠as mostrar tambi√©n el top 5
top_5_voted = df.nlargest(5, "voteCount")[["title", "voteCount"]]
print("\nTop 5 pel√≠culas con m√°s votos:")
print(top_5_voted)

# Gr√°fico (opcional)
plt.figure(figsize=(8, 5))
plt.bar(top_5_voted["title"], top_5_voted["voteCount"], color="orange")
plt.xticks(rotation=45, ha="right")
plt.xlabel("T√≠tulo")
plt.ylabel("Cantidad de votos")
plt.title("Top 5 pel√≠culas con m√°s votos")
plt.tight_layout()
plt.show()

# -----------------------------------------------------------
# (e) Cu√°ntas pel√≠culas se hicieron por a√±o (gr√°fico de barras)
# -----------------------------------------------------------
movies_per_year = df["year"].value_counts().sort_index()
print("\n(e) üìÖ N√∫mero de pel√≠culas por a√±o:")
print(movies_per_year)

plt.figure(figsize=(12, 6))
plt.bar(movies_per_year.index, movies_per_year.values, color="lightgreen")
plt.xlabel("A√±o")
plt.ylabel("N√∫mero de pel√≠culas")
plt.title("N√∫mero de pel√≠culas producidas por a√±o")
plt.tight_layout()
plt.show()

# -----------------------------------------------------------
# (g) Los g√©neros que generaron m√°s ganancias
# -----------------------------------------------------------
# 'genres' est√° separada por '|', la convertimos a lista y hacemos explode
df["genres"] = df["genres"].fillna("")
df["genres"] = df["genres"].apply(lambda x: x.split("|") if isinstance(x, str) else [])

genres_profit = (
    df.explode("genres")
      .groupby("genres")["profit"]
      .sum()
      .sort_values(ascending=False)
)

print("\n(g) üí∞ G√©neros con m√°s ganancias (totales):")
print(genres_profit.head(10))

# Gr√°fico de barras para los 10 g√©neros con mayores ganancias
plt.figure(figsize=(10, 6))
genres_profit.head(10).plot(kind='bar', color="green")
plt.xlabel("G√©nero")
plt.ylabel("Ganancia total (USD)")
plt.title("Top 10 g√©neros con m√°s ganancias")
plt.xticks(rotation=45, ha="right")
plt.tight_layout()
plt.show()